* {
    box-sizing: border-box;
    margin: 0;
}

html, body {
    width: 100%;
    height: 100%;
}

nav { /* TO-DO: das könnte eine Schwäche im Code sein: lieber der Navigation eine Klassan-Namen geben... */
    margin: 0;
    padding: 0;
    background-color: #282E34;
}

#logo /* For Desktops */{
    padding: 0 30px;
    font-size: 200%;
    line-height: 60px;
    color: #FFF;
    font-family: 'Dancing Script', cursive;
    float: right;
}

[id^=drop] /* Selektiert alle Elemente mit der ID, welche mit "drop" beginnt (hier: 'drop', 'drop-1' 'drop-2' etc...): dabei werden alle Checkboxen bei der Navigation nicht mehr angezeigt. Auch nicht bei Iphone & Ipads. */ {
    display: none;
}

nav:after /* Inserts Pseudo-Element after the navigation. */ {
    content: ""; /*Setzt nach der Navigation einen leeren String. Macht, dass Navigation ganze Breite annimmt. Ausserdem wird dadurch die Höhe genau auf 0 gesetzt, wie wenn man Margin auf 0 setzen würde.*/
    display: table; /*Macht, dass Navigation ganze Breite annimmt. Vewandelt alles nach der Navigation (= leerer String) als Tabelle*/
    clear: both; /*No floating elements allowed on either the left or the right side. Macht, dass Navigation ganze Breite annimmt.Würde auch mit clear: left funktionieren...*/
}

nav ul {
    float: left;
    padding: 0;
    margin: 0;
    list-style: none;
    position: relative; /* Jedes Untermenü geht an die Stelle, zu welchem Übermenü es gehört. */
}

nav ul li {
    margin: 0px;
    display: inline-block; /* Würde auch mit display:block funktionieren. */
    float: left;
    background-color: #282E34;
}

nav a {
    display: block;
    padding: 0 20px;
    color: #FFF;
    font-size: 20px;
    line-height: 60px; /*Setzt die Grösse um den <a>-Link herum*/
    text-decoration: none;
}

nav ul ul {
    display: none; /* Macht, dass beide Sub-Menüs verschwinden */
    position: absolute;
    top: 60px;
}

nav ul li:hover > ul {
	display: inherit; /* Inherits the display: inline-block property from its parent element, which is the first <ul> <li>. Es ist sehr wichtig li:hover zu schreiben, damit der Browser weiss, dass er das zweite Untermenü nur dann sichtbar machen soll, wenn man mit der Maus drüber fährt! 
    - WICHTIG: Beachte ausserdem, dass dieser Effekt nur dann aktiviert wird, bei grossen Bildschirmen (nicht bei Phones, Tablets oder kleinen Screens...)! */
}

nav ul ul li {
    width: 240px; /* Breite der Untermenüs --> Bestes: 220px; ABER: mit "scroll-Pfeil mindestens 240px! */
    float: none;
    display: list-item;
    z-index: 10;  
    position: relative;
}

@media only screen and (min-width: 1038px) { 
    .drop-down {
        /*
        max-height: 600px;
        overflow: auto;
        */
        max-height: 573px; /*Dieser Wert gibt an, wie weit das Drop-Down Menü bei "Produkte" runtergeht.*/
        overflow: auto; /*Hier sage ich dem Browser, er soll eine Scroll-bar einfügen für das Drop-Down Menü.*/
    }
}

li > a:only-child:after { content: ''; } /* Wenn <a>-Tag das only-child ist in einem <li>-Tag, dann wird nur ein leerer String eingefügt. Durch diesen Befehl geht man sicher, dass nur ein +-string steht, wo es ein Sub-Menü gibt. */

/*------------------------------------------------ Phone Styles ----------------------------------------------*/
@media only screen and (max-width: 479px) {

    #logo { /* Das Desktop-Logo soll unsichtbar werden. */
      display: none;
    }
    
    #logo-phone { /* Das Phone-Logo soll sichtbar werden && Styling erhalten. */
        display: block;
        float: right;
        font-family: 'Dancing Script', cursive;
        font-size: 120%;
    }
    
    nav { 
      margin: 0;
      /*----- um die Navigation nicht fixiert zu lassen auf dem Handy ------ position: static;*/ 
    }
    
    .toggle + a, .menu { /* Selects first <a>-elements that are placed immediately after the toggle class. This guarantees that the 'Produkte' gets invisible (but 'Produkte +' stays visible). */
       display: none;
    }
    
    .toggle {
      display: block;
      background-color: #282E34;
      padding: 0 20px;
      font-size: 20px;
      color: #FFF;
      line-height: 60px;
      text-decoration: none;
      border: none;
    }
    
    .toggle:hover { 
      background-color: #929292; /*Hover-Effekt hellgrau. Muss man zusätzlich einfügen, sonst gibt es keinen Hover-Effekt auf die Toggle Klasse*/
    }
    
    nav ul li a:hover {
        background-color: #929292; /* Hover-Effekt hellgrau. */
    }
    
    [id^=drop]:checked + ul { /* Selects all <ul>-elements that are placed immediately after some (checked) elements that begin with the ID "drop". Dieser Befehl ermöglicht das Click-Event! Nachdem die Elemente aus der Liste mit einem Check-Mark angeklickt wurden bzw. checked wurden, wechselt der Display von "none" zu "block" und die Elemente werden sichtbar! */
      display: block; 
    }
    
    nav ul li {
      display: block; /* Braucht man nicht. Funktioniert auch ohne. */
      width: 100%;
    }
    
    nav ul ul .toggle,
     nav ul ul a { 
       padding: 0 40px; 
    }
    
    nav ul ul ul a { 
      padding: 0 80px;  /* Macht, dass der innere Abstand innerhalb der <a>-Boxen grösser werden. */
    }
    
    /*------------ Nicht so gut bzw. unnötig*/
    nav a:hover,
     nav ul ul ul a { 
       background-color: #282E34; 
    }
    
    nav ul li ul li .toggle,
     nav ul ul a { 
       background-color: #212121; 
    }
    
    /*--------------- */
    
    nav ul ul {
      float: none; /* Braucht es, sonst füllt das zweite Submenü nicht mehr die ganze Seite aus. */
      position: static; /* Elements render in order, as they appear in the document flow. */
      color: #ffffff;
    }

    nav ul li:hover > ul { /* WICHTIG: Das verursacht, dass wir den Hover-Effekt nur beim Desktop haben, bei den anderen Bildschirmen (Phone, Tablets, kleine Desktops) hingegen gibt es dadurch den "click"-Effekt. */
        display: none; 
    }
    
    nav ul ul li {
      display: block;
      width: 100%;
    }
}


/* ------------------------------ Allgemeine-Medium-Phone-Styles ---------------------------------- */
@media only screen and (min-width: 480px) and (max-width: 989px) {
	
    .menu /*unique for tablets*/ {
        width: 100%;
    }
        
    #logo {
    display: none;
    }

    #logo-phone {
        display: block;
        float: right;
        font-family: 'Dancing Script', cursive;
        font-size: 120%;
    }

    nav { 
    margin: 0;
    /*----- um die Navigation nicht fixiert zu lassen auf dem Handy ------ position: static;*/ 
    }

    .toggle + a, .menu { /*Selects all <a> elements that are placed immediately after toggle class*/
    display: none;
    }

    .toggle {
    display: block;
    background-color: #282E34;
    padding: 0 20px;
    font-size: 20px;
    color: #FFF;
    line-height: 60px;
    text-decoration: none;
    border: none;
    }

    .toggle:hover { 
    background-color: #929292; /* Hover-Effekt hellgrau. Muss man zusätzlich einfügen, sonst gibt es keinen Hover-Effekt auf die Toggle Klasse*/
    }

    nav ul li a:hover {
        background-color: #929292; /*Hover-Effekt hellgrau*/
    }

    [id^=drop]:checked + ul { /* Selects all <ul> elements that are placed immediately after some (checked) elements that begin with the ID "drop". Dieser Befehl ermöglicht das Click-Event! Nachdem die Elemente aus der Liste mit einem Check-Mark angeklickt wurden bzw. checked wurden, wechselt der Display von "none" zu "block" und die Elemente werden sichtbar! */
    display: block; 
    }

    nav ul li {
    display: block; /*Braucht man nicht. Funktioniert auch ohne*/
    width: 100%;
    }

    nav ul ul .toggle,
    nav ul ul a { 
    padding: 0 40px; 
    }

    nav ul ul ul a { 
    padding: 0 80px;  /*Macht, dass der innere Abstand innerhalb der <a>-Boxen grösser werden*/
    }

    /*------------ Nicht so gut bzw. unnötig*/
    nav a:hover,
    nav ul ul ul a { 
    background-color: #282E34; 
    }

    nav ul li ul li .toggle,
    nav ul ul a { 
    background-color: #212121; 
    }

    /*--------------- */

    nav ul ul {
    float: none; /*Braucht es, sonst füllt das zweite Submenü nicht mehr die ganze Seite aus */
    position: static; /*Elements render in order, as they appear in the document flow*/
    color: #ffffff;
    }

    nav ul li:hover > ul { /* WICHTIG: Das verursacht, dass wir den Hover-Effekt nur beim Desktop haben, bei den anderen Bildschirmen (Phone, Tablets, kleine Desktops) hingegen gibt es dadurch den "click"-Effekt. */
        display: none; 
    }

    nav ul ul li {
    display: block;
    width: 100%;
    }
}


/* Desktop Styles allgemeines Design */
@media only screen and (min-width: 990px) {
	
    .toggle {
     display: none;
    }
    
    #logo {
        display: block;
    }
    
    nav a.thispage {
        background-color: #929292; /*Damit die Farbe auf aktuellen Seite bleibt.*/
    }
    
    nav ul li ul li:hover { 
        background: #CCC; /* Macht, dass wenn man auf ein Untermenü fährt, dass die Hover Farbe sich ändert. Hier ist die Farbe grau. Könnte auch background-color schreiben...*/
    }
    
    nav a:hover { 
        background-color: #929292;
     }
     
     nav ul li:hover { 
        background: #929292; /*Macht, dass wenn man auf ein Untermenü fährt, dass die Hover Farbe sich ändert. Hier wird die Farbe leicht hell-grauer. Könnte auch background-color schreiben...*/
    }
}


/* Spezielles für > 1'000px bis 1'346px --> ist notwenidg, sonst gibt es einen Bug und das Bild kommt nicht bis zum Text, siehe z.B. News-Seite, wenn du diesen Code-Abschnitt löschest. */
@media only screen and (min-width: 990px) and (max-width: 1038px) { /*vorher: max-width: 1024px, aber dann kommt das Logo von Audiophil-Dreams auf die untere Seite, wenn ich das Browserfenster verkleinere!*/

    .menu /*unique for tablets*/{
        width: 100%;
    }

    #logo {
    display: none;
    }

    #logo-phone {
        display: block;
        float: right;
        font-family: 'Dancing Script', cursive;
        font-size: 120%;
    }

    nav { 
    margin: 0;
    /*----- um die Navigation nicht fixiert zu lassen auf dem Handy ------ position: static;*/ 
    }

    .toggle + a, .menu { /*Selects all <a> elements that are placed immediately after toggle class*/
    display: none;
    }

    .toggle {
    display: block;
    background-color: #282E34;
    padding: 0 20px;
    font-size: 20px;
    color: #FFF;
    line-height: 60px;
    text-decoration: none;
    border: none;
    }

    .toggle:hover { 
    background-color: #929292; /*Hover-Effekt hellgrau. Muss man zusätzlich einfügen, sonst gibt es keinen Hover-Effekt                               auf die Toggle Klasse*/
    }

    nav ul li a:hover {
        background-color: #929292; /*Hover-Effekt hellgrau*/
    }

    [id^=drop]:checked + ul { /*Selects all <ul> elements that are placed immediately after some (checked) elements that                          begin with the ID "drop". Dieser Befehl ermöglicht das Click-Event! Nachdem die Elemente aus                          der Liste mit einem Check-Mark angeklickt wurden bzw. checked wurden, wechselt der Display von                          "none" zu "block" und die Elemente werden sichtbar! */
    display: block; 
    }

    nav ul li {
    display: block; /*Braucht man nicht. Funktioniert auch ohne*/
    width: 100%;
    }

    nav ul ul .toggle,
    nav ul ul a { 
    padding: 0 40px; 
    }

    nav ul ul ul a { 
    padding: 0 80px;  /*Macht, dass der innere Abstand innerhalb der <a>-Boxen grösser werden*/
    }

    /*------------ Nicht so gut bzw. unnötig*/
    nav a:hover,
    nav ul ul ul a { 
    background-color: #282E34; 
    }

    nav ul li ul li .toggle,
    nav ul ul a { 
    background-color: #212121; 
    }

    /*--------------- */

    nav ul ul {
    float: none; /*Braucht es, sonst füllt das zweite Submenü nicht mehr die ganze Seite aus */
    position: static; /*Elements render in order, as they appear in the document flow*/
    color: #ffffff;
    }

    nav ul li:hover > ul {  /* WICHTIG: Das verursacht, dass wir den Hover-Effekt nur beim Desktop haben, bei den anderen Bildschirmen (Phone, Tablets, kleine Desktops) hingegen gibt es dadurch den "click"-Effekt. */
    display: none; 
    }

    nav ul ul li {
    display: block;
    width: 100%;
    }
}

/*** --- Start of Swiper-Styles --- ***/

.swiper-container {
    height: 100vh;
    overflow: hidden;
    position: relative;
}

.swiper-wrapper {
    position: relative;
    display: flex;
}

.swiper-container .swiper-slide {
    background: #ccc;
    display: grid;
    place-items: center;
    place-content: center;
    color: #fff;
    font-size: 60px;
    min-width: 100%;
}

.swiper-slide h1 {
    font-size: 1.8rem;
    width: 90%;
    text-align: center;
    margin: 1.5rem auto; /* Bringt mehr Luft zwischen Button & Titel. */
}

.swiper-slide button {
    background: transparent;
    border: 2.5px solid #fff;
    color: #fff;
    font-family: inherit;
    text-transform: uppercase;
    padding: 0.8rem 1.4rem;
    outline: 0;
    cursor: pointer;
    transition: all 0.5s ease;
}

/* - Responsiveness of Slider - */
@media screen and (min-width: 400px){
    .swiper-slide h1{
        font-size: 4rem;
    }
}

@media screen and (min-width: 992px){
    .swiper-slide h1{
        font-size: 5rem;
    }
    .swiper-slide button{
        font-size: 1.05rem;
    }
}

.swiper-pagination-bullet-active {
    background-color: #fff !important;
}

.swiper-button-prev {
    color: #fff !important;
}
  
.swiper-button-next {
   color: #fff !important;
}

.swiper-button-next::after, .swiper-button-prev::after { /* Hiermit legst du die Grösse der beiden Pfeile des Sliders fest. */
    font-size: 1.3rem !important;
}